from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import time

# Initialize the WebDriver (make sure to specify the path to your WebDriver)
driver = webdriver.Chrome(executable_path="path/to/chromedriver")

try:
    # Step 1: Navigate to the web application
    driver.get("http://your-web-app-url.com")

    # Step 2: Search for Existing Data
    search_field = driver.find_element(By.NAME, "name")  # Find the search field
    search_field.send_keys("Existing Name")  # Enter a name that exists in the background data
    search_button = driver.find_element(By.ID, "search_button")
    search_button.click()
    time.sleep(2)  # Wait for the success message

    # Step 3: Check for Success Message
    success_message = driver.find_element(By.ID, "success_message").text
    assert success_message == "Success", "Search failed or incorrect success message"

    # Step 4: Verify Initial Data
    field_value = driver.find_element(By.ID, "field_id").get_attribute("value")
    assert field_value == "Expected Value", "Initial value is incorrect"

    # Step 5: Update a Field
    update_field = driver.find_element(By.ID, "field_to_update")
    update_field.clear()
    update_field.send_keys("New Value")
    update_button = driver.find_element(By.ID, "update_button")
    update_button.click()
    time.sleep(2)  # Wait for the success message

    # Step 6: Check for Update Success Message
    update_success_message = driver.find_element(By.ID, "update_success_message").text
    assert update_success_message == "Success", "Update failed or incorrect success message"

    # Step 7: Retrieve Updated Data
    id_field = driver.find_element(By.ID, "id_field").get_attribute("value")
    clear_button = driver.find_element(By.ID, "clear_button")
    clear_button.click()
    id_search_field = driver.find_element(By.ID, "id_search_field")
    id_search_field.send_keys(id_field)
    retrieve_button = driver.find_element(By.ID, "retrieve_button")
    retrieve_button.click()
    time.sleep(2)  # Wait for the retrieve success message

    # Step 8: Check for Retrieve Success Message and Verify Update
    retrieve_success_message = driver.find_element(By.ID, "retrieve_success_message").text
    assert retrieve_success_message == "Success", "Retrieve failed or incorrect success message"
    updated_field_value = driver.find_element(By.ID, "field_to_update").get_attribute("value")
    assert updated_field_value == "New Value", "Updated value is incorrect"

    # Step 9: Clear and Search Again
    clear_button.click()
    search_button.click()
    time.sleep(2)  # Wait for search results to load

    # Step 10: Verify that the changed field appears in the results
    search_result_value = driver.find_element(By.XPATH, "xpath_of_field_in_results").text
    assert search_result_value == "New Value", "Updated field value not found in results"

    print("Test passed successfully!")

finally:
    # Close the browser window
    driver.quit()
